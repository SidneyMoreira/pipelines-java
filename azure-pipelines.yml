# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

strategy:
  matrix:
    linux:
      imageName: "ubuntu-latest"
    mac:
      imageName: "macOS-latest"
    windows:
      imageName: "windows-latest"
  maxParallel: 3

# Você não pode usar strategy várias vezes em um contexto. Se você quiser criar em uma só plataforma e em várias versões, adicione a matriz a seguir ao arquivo.
# strategy:
# matrix:
#   jdk10_linux:
#     imageName: "ubuntu-latest"
#     jdkVersion: "1.10"
#    mac:
#      imageName: "macOS-latest"
#      jdkVersion: "1.12"
#   jdk11_windows:
#     imageName: "windows-latest"
#     jdkVersion: "1.11"
# maxParallel: 3

#Em seguida, substitua essa linha em sua tarefa do Maven:
#jdkVersionOption: "1.8"

#com esta linha: jdkVersionOption: $(jdkVersion)

pool:
  vmImage: $(imageName)

steps:
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: "JaCoCo"
    summaryFileLocation: "$(System.DefaultWorkingDirectory)/**/site/jacoco/jacoco.xml"
    reportDirectory: "$(System.DefaultWorkingDirectory)/**/site/jacoco"
    failIfCoverageEmpty: true
